# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main,master,develop ]
  pull_request:
    branches: [ main,master,develop ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
          
  notifySlack:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Notify slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: abinoda/slack-action@v1.0.7
      with:
        args: '{\"channel\":\"CJF2WQZPH\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Who?:* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'
        
  slackAction:
    needs: [ build,notifySlack ]
    runs-on: ubuntu-latest
    
    steps:
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  
  deploy-dev:
    needs: [ build,notifySlack,slackAction ]
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Ddevops.username="$USERNAME" \
         -Ddevops.password="$PASSWORD" \
         -DapplicationName="hello-world-ssl-dev" \
         -Dplatform.environment="Sandbox" \
         -Dworker.count="1" \
         -Dworker.type="MICRO" \
         -Dregion="ca-central-1" \
         -Danypoint.orgid="0d9dd882-d0a4-4003-a065-7ab909813e90" \
         -Dmule.env="Sandbox" \
         -Danypoint.clientId="dd8e29257c5a45e6adc61fa1691333ba" \
         -Danypoint.clientSecret="6E9f49877b674ba79244aCD2Bec1986c" \
         -DsecureKey="mule" \
         -Dapp.runtime="4.3.0" \
         -DskipTests
         
  deploy-production:
    needs: deploy-dev
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: Production
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v1
        with:
    # A list of files, directories, and wildcard patterns to cache and restore
          path: /home/runner/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
              ${{ runner.os }}-maven-
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 1.8   
      - name: Download a Build Artifact
        uses: actions/download-artifact@master
        with:
        # Artifact name
          name: build_artifact
          
      - name: Deploy to Anypoint Platform
        env:
          USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
          PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
          
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Ddevops.username="$USERNAME" \
           -Ddevops.password="$PASSWORD" \
           -DapplicationName="hello-world-ssl-design" \
           -Dplatform.environment="Design" \
           -Dworker.count="1" \
           -Dworker.type="MICRO" \
           -Dregion="ca-central-1" \
           -Danypoint.orgid="0d9dd882-d0a4-4003-a065-7ab909813e90" \
           -Dmule.env="Sandbox" \
           -Danypoint.clientId="60d98fcc29ea44e3b9d5214449e5073e" \
           -Danypoint.clientSecret="e2021890e164486aAbA9852861CaB912" \
           -DsecureKey="mule" \
           -Dapp.runtime="4.3.0" \
           -DskipTests
 
