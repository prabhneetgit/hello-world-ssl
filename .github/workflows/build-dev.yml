# This workflow will a MuleSoft project and deploy to CloudHub

name: Build and Deploy Develop Branch

on:
  pull_request:
    branches:
    - 'develop'
  push:
    branches:
    - 'develop'
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      id: artifact_details
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        name=$artifactName1
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
        echo $name $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
          
  assign:
    runs-on: ubuntu-latest
    steps:
      - if: github.base_ref == 'master' # base branch name is 'master'
        run: echo REVIEWERS=prabhneetgit >> $GITHUB_ENV
      - if: startsWith(github.base_ref, 'develop') # base branch name starts with 'develop_'
        run: echo REVIEWERS=prabhneetgit >> $GITHUB_ENV
      - if: startsWith(github.event.pull_request.title, 'bug') # title starts with 'bug'
        run: echo REVIEWERS=prabhneetgit >> $GITHUB_ENV
      - if: contains(github.event.pull_request.body, 'enhancement') # body contains 'enhancement'
        run: echo REVIEWERS=prabhneetgit >> $GITHUB_ENV
      - uses: hkusu/review-assign-action@v1
        with:
          assignees: ${{ github.actor }}
          reviewers: ${{ env.REVIEWERS }}
  
  deploy-dev:
    environment: Dev
    needs: [ build,assign ]
    runs-on: ubuntu-latest
    #env:
      #SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      run: |
        echo "${{ steps.artifact_details.outputs.name }}"
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Ddevops.username="$USERNAME" \
         -Ddevops.password="$PASSWORD" \
         -DapplicationName="hello-world-ssl-dev" \
         -Dplatform.environment="Sandbox" \
         -Dworker.count="1" \
         -Dworker.type="MICRO" \
         -Dregion="ca-central-1" \
         -Danypoint.orgid="0d9dd882-d0a4-4003-a065-7ab909813e90" \
         -Dmule.env="Sandbox" \
         -Danypoint.clientId="$CLIENT_ID" \
         -Danypoint.clientSecret="$CLIENT_SECRET" \
         -DsecureKey="mule" \
         -Dapp.runtime="4.3.0" \
         -DskipTests
